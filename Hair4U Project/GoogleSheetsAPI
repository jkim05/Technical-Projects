#Jefferson Kim
#Google API - Hair4U Salon Scheduler
#May 2024 - July 2025

#Note thise is to show my code structure. Live demo coming soon

import gspread
from google.oauth2.service_account import Credentials
import datetime

SPREADSHEET_KEY = "SPREADSHEET KEY" 
SERVICE_ACCOUNT_FILE = "JSON Key"
SCHEDULE_OPTIONS = ["Sunny", "John", "Booked", "Open"]
SCHEDULE_TIMES = [
    "9:30 AM", "10:00 AM", "10:30 AM", "11:00 AM", "11:30 AM",
    "12:00 PM", "12:30 PM", "1:00 PM", "1:30 PM", "2:00 PM",
    "2:30 PM", "3:00 PM", "3:30 PM", "4:00 PM", "4:30 PM",
    "5:00 PM", "5:30 PM"
]

def get_worksheet():
    try:
        scope = ['https://www.googleapis.com/auth/spreadsheets']
        creds = Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=scope)
        client = gspread.authorize(creds)
        spreadsheet = client.open_by_key(SPREADSHEET_KEY)
        return spreadsheet.get_worksheet(0)
    except Exception as e:
        print(f"ERROR 123: Authentication failed: {e}")
        return None


def find_row_by_date(worksheet, target_date_str):
    dates_col = worksheet.col_values(1)
    try:
        return dates_col.index(target_date_str) + 1  # +1 for 1-based indexing
    except ValueError:
        return None


def find_col_by_time(worksheet, target_time_str):
    times_row = worksheet.row_values(1)
    try:
        return times_row.index(target_time_str) + 1
    except ValueError:
        return None


def main():
    worksheet = get_worksheet()
    if not worksheet:
        return
    while True:
        date_input = input("Enter the date (MM/DD/YY): ")
        try:
            date_obj = datetime.datetime.strptime(date_input, "%m/%d/%y")
            target_date_str = date_obj.strftime("%m/%d/%y")
            break
        except ValueError:
            print("ERROR 101: Invalid date format. Please use MM/DD/YY.")
            
    date_row = find_row_by_date(worksheet, target_date_str)
    if not date_row:
        print(f"ERROR 201: Date '{target_date_str}' not found in the spreadsheet. Please add it and try again.")
        return

    print("\n--- Enter Schedule for", target_date_str, "---")

    for time_slot in SCHEDULE_TIMES:
        time_col = find_col_by_time(worksheet, time_slot)
        if not time_col:
            print(f"Time slot '{time_slot}' not found in the spreadsheet. Skipping.")
            continue

        print(f"\nTime slot: {time_slot}")
        print("Choose an option:")
        for i, option in enumerate(SCHEDULE_OPTIONS, 1):
            print(f"  {i}. {option}")

        while True:
            try:
                choice = int(input("Enter your choice (1-4): "))
                if 1 <= choice <= len(SCHEDULE_OPTIONS):
                    assignment = SCHEDULE_OPTIONS[choice - 1]
                    break
                else:
                    print("ERROR 301: Invalid choice. Please enter a number from the list.")
            except ValueError:
                print("ERROR 302: Invalid input. Please enter a number.")
        
        customer_name = ""
        if assignment == "Booked":
            customer_name = input("Enter customer name (optional): ")
            if customer_name:
                assignment = f"{assignment} ({customer_name})"

        try:
            worksheet.update_cell(date_row, time_col, assignment)
            print(f"Successfully Updated {time_slot} to '{assignment}' for {target_date_str}.")
        except Exception as e:
            print(f"ERROR 401: Failed to update cell at ({date_row}, {time_col}): {e}")

    print("\nSchedule for", target_date_str, "is complete. Thank you, Come again!")


if __name__ == "__main__":
    main()
